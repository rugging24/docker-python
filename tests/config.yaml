services:
  - name: db1 #Note that this is not the running docker container name 
    image: "postgres:13"
    auto_remove: True
    command: ""
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: a
    exposed_ports:
      - 5432
    volumes:
      - host: "data_volume"
        container: "/data"
        mode: "rw"
    log_wait_parameters:
      log_line_regex: "database system is ready to accept connections"
      wait_timeout: 30
      poll_interval: 2
    spawn_rank: 0
  - name: app1
    image: "node:12"
    auto_remove: True
    command: " ls -l "
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: a
      DOCKER_PYTHON_EXTERNAL_HOST_DB1: ""
      DOCKER_PYTHON_INTERNAL_HOST_DB1: ""
      DOCKER_PYTHON_MAPPED_PORT_DB1: {} 
      DOCKER_PYTHON_EXTERNAL_HOST_APP2: ""
      DOCKER_PYTHON_INTERNAL_HOST_APP2: ""
      DOCKER_PYTHON_MAPPED_PORT_APP2: {} 
    exposed_ports:
      - "5432"
    volumes:
      - host: "/data"
        container: "/data"
        mode: "rw"
      - host: "/data2"
        container: "/data2"
        mode: "ro"
    log_wait_parameters:
      log_line_regex: ".*Application startup complete.*"
      wait_timeout: 30.0
      poll_interval: 1
    http_wait_parameters:
      http_port: "8080"
      response_status_code: 200
      end_point: "/ping"
      startup_delay_time: 20
    spawn_rank: 1
    depends_on:
      - db1
      - app2